#上下文配置
server.port=8080
server.servlet.context-path=/lasSeckillDemo

#主数据源配置
spring.datasource.url=jdbc:mysql://localhost:3306/lasSeckillDemo?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#连接池补充设置
#初始大小
spring.datasource.initialSize=5
#最小
spring.datasource.minIdle=5
#最大
spring.datasource.maxActive=30000
#获取连接等待超时的时间
spring.datasource.maxWait = 60000
#每隔多久就进行一次检测，检测需要关闭的空闲连接
spring.datasource.timeBetweenEvictionRunsMillis = 2000
#一个连接在池中的最小生存时间，
spring.datasource.minEvictableIdleTimeMillis = 300000
#用来检测连接是否有效的Sql 语句
spring.datasource.validationQuery=SELECT 1 FORM DUAL

spring.datasource.testWhileIdle=true

spring.datasource.testOnBorrow=true

spring.datasource.testOnReturn=true

spring.datasource.poolPreparedStatements=true

spring.datasource.maxPoolPreparedStatementPerConnectionSize=20

spring.datasource.filters=stat,log4j,wall

spring.datasource.conntectionProperties=druid.stat.mergeSql=true

#Redis
spring.redis.database=0

spring.redis.host=127.0.0.1

spring.redis.port=6379

spring.redis.jedis.pool.max-active=3000

# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=1

# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0

spring.redis.timeout=0


#rabbitmq
spring.rabbitmq.host=127.0.0.1

spring.rabbitmq.port=5672

spring.rabbitmq.username=guest

spring.rabbitmq.password=guest

spring.rabbitmq.publisher-confirms=true

spring.rabbitmq.virtual-host=/

rabbitmq.config.exchangeName=lasSeckillDemoExchange
rabbitmq.config.queueName=lasSeckillDemoQueue
rabbitmq.config.routingKey=lasSeckillDemoRoutingKey


#mybatis
mybatis.type-aliases-package=com.scut.seckill.entity
#mapper扫描位置
mybatis.mapper-locations = classpath:dao/*.xml




